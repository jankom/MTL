#!/bin/bash

showUsage() {
    cat <<EOF
Usage: 
sync ssh://user@host.com:~/mynotes/test
EOF
}

### this is just quick proof of concept version 
### later we add a way to store remotes

if [ $# -eq 1 ]; then
    # copy the remote index
    echo "DELETING OLD INDEXES"
    rm .mtl/remote/*
    echo "COPYING INDEXES"
    scp ${1}/.mtl/*.index .mtl/remote/.
    # merge them
    for index in .mtl/remote/*.index 
    do
	DOC=`echo "$index" | sed 's/.mtl\/remote\/\([a-z0-9_-]*\)\.index/\1/'`
	echo "MERGING: $DOC"
	mtl-merge $DOC $index
    done
    scp .mtl/*.index ${1}/.mtl/
    # copy the blobs that arent already here, copy the missing there
    echo "RSYNCING THE BLOBS"
    rsync -v -a ${1}/.mtl/d/* .mtl/d
    rsync -v -a .mtl/d/* ${1}/.mtl/d    
    echo "OK - DONE"
    #TODO LATER check for conflicts ... 
elif [ $# -eq 2 ]; then
    # copy the remote index
    echo "DELETING OLD INDEXES"
    rm .mtl/remote/*
    echo "COPYING INDEXES"
    scp ${2}/.mtl/${1}.index .mtl/remote/.
    # merge them
    for index in .mtl/remote/*.index 
    do
	DOC=`echo "$index" | sed 's/.mtl\/remote\/\([a-z0-9_-]*\)\.index/\1/'`
	echo "MERGING: $DOC"
	mtl-merge $DOC $index
    done
    scp .mtl/${1}.index ${2}/.mtl/
    # copy the blobs that arent already here, copy the missing there
    echo "RESYNCING THE BLOBS"
    for blob in `comm -13 <(cat .mtl/${1}.index | cut -f 1 | uniq | sort) <(cat .mtl/remote/${1}.index | cut -f 1 | uniq | sort)` 
    do
	echo "copying blob from remote: $blob"
	scp ${2}/.mtl/d/$blob .mtl/d/.
    done
    for blob in `comm -23 <(cat .mtl/${1}.index | cut -f 1 | uniq | sort) <(cat .mtl/remote/${1}.index | cut -f 1 | uniq | sort)` 
    do
	echo "copying blob to remote: $blob"
	scp .mtl/d/$blob ${2}/.mtl/d/.
    done
    #rsync -v -a ${1}/.mtl/d/* .mtl/d
    #rsync -v -a .mtl/d/* ${1}/.mtl/d    
    echo "OK - DONE"
    #TODO LATER check for conflicts ...     
else
    showUsage
fi

